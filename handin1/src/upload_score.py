import os
import sys
import urllib.request

uids = ["201509421", "201701073", "201206030", "201303951", "201404689", "201205917", "201304216", "201506718", "201409778", "201303961", "201303578", "201408907", "201505931", "201407421", "201403937", "201508308", "20084295", "201303513", "201303890", "201509053", "201405741", "201509447", "201403913", "201303531", "201509613", "201303974", "201504700", "201508114", "201504878", "201409845", "201405359", "201409749", "KP90088", "201406146", "201508955", "201509419", "201303969", "201505878", "201407185", "201303920", "201303972", "201303963", "201508488", "201405114", "201504741", "201404403", "201303828", "201504624", "201407676", "201505991", "201303957", "201303858", "201506687", "201404962", "201505217", "201406975", "201390049", "20102998", "201408223", "201408552", "201603657", "201507975", "201303971", "201303964", "201303715", "201506056", "201602118", "201604258", "201303718", "201309283", "201408757", "201205640", "201205587", "201303948", "201207061", "201509600", "201508245", "201406946", "201506437", "201505317", "201407387", "201508691", "201507211", "201508559", "20113604", "201303590", "201404985", "201505750", "201508096", "201206110", "201505488", "201507667", "20106904", "201303592", "201303540", "201506764", "201303882", "201305292", "201408870", "201701467", "201309270", "201205955", "201408149", "201506984", "201205995", "201209139", "201600038", "201303611", "201507288", "201504553", "201405746", "201505956", "201405986", "201404176", "201205931", "201405952", "201506991", "201270031", "201303950", "201303949", "201509079", "201370234", "201507971", "201270725", "201506166", "201303850", "201505811", "201407609", "201508158", "201304189", "201507435", "201404431", "201205589", "201303833", "20115794", "201404808", "201403930", "201507800", "201504729", "201404841", "201507689", "201509499", "201303940", "201303944", "201303953", "201407114", "201507683", "201303527", "201603660", "201206006", "201509272", "201303680", "201303712", "201509675", "201303956", "201509411", "201505261", "201602561", "201607567", "201602119", "201407194", "201505749", "20116647", "201303889", "201603658", "201303947", "201408641", "201409675", "201303609", "201408687", "201505082", "201303560", "201404470", "201407767", "201504938", "201508062", "201303582", "201303529", "201407281", "201404606", "20114270", "201303854", "201704191", "20112775", "201303839", "201309512", "11671", "20053514", "20114636", "201303514", "201611906", "201702070"]


if len(sys.argv) != 3:
	print("Invalid input. \nUsage: \t\t'python upload_score.py STUDENTID TEAM_NAME' \nExample: \t'python upload_score.py 201303514 AllStarTA'")
	sys.exit()
	

uid = sys.argv[1]
name = sys.argv[2]

if not (uid in uids) :
	print("Bad student id: \t%s "%(uid))
	sys.exit()

if len(name) > 50: 
	print("Too long name: \t%s"%(name))
	sys.exit()


# run entire model stats script
os.system('python model_stats.py -soft_val')
os.system('python model_stats.py -log_val')

with open('results/softmax_best_result.csv', "r") as fh: score_softmax = fh.read().split("\n")[1].split(",")[-1]
with open('results/logistic_regression_best_result.csv', "r") as fh: score_logistic_reg = fh.read().split("\n")[1].split(",")[-1]

score = max(score_softmax, score_logistic_reg)

# Yes, it is possible to cheat by typing in any score below. Realizing this shouldn't make 
# you feel like Edward Snowden. 
page = "https://www.studieopgaven.dk/ml/highscore.php?userid=%s&score=%s&name=%s"%(uid, score, name)
urllib.request.urlopen(page)
print("The score %s was uploaded. "%score)



